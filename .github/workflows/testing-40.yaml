name: Testing Django 4.0


on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master


jobs:
  Django40:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - '3.12.9'
          - '3.11.11'
          - '3.10.16'
          - '3.9.21'
          - '3.8.18'  # At time of update, GitHub max version was this.
        django-version:
          - '4.2.20'
        database-taget:
          - 'mysql'
          - 'postgres'
          - 'sqlite'

    env:
      DATABASE_ENGINE: ${{ matrix.database-taget }}
      DJANGO_VERSION: ${{ matrix.django-version }}

    services:
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: gh_actions_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: gh_actions_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Environment Report
        run: |
          echo Python Version ... $(python --version)
          echo Django Version ... ${DJANGO_VERSION}
          echo Database Used .... ${DATABASE_ENGINE}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install Django==${{ matrix.django-version }}
          pip install -r requirements.txt

      - name: Install dependencies (if mysql)
        if: ${{ matrix.database-taget == 'mysql' }}
        run: |
          pip install mysqlclient

      - name: Install dependencies (if postgres)
        if: ${{ matrix.database-taget == 'postgres' }}
        run: |
          pip install psycopg2

      - name: Unit Testing
        run: make test-unit

      - name: Coverage Report
        run: make test-coverage-report

      - name: Local Integration Testing
        run: make test-integration

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v1
