name: Comprehensive Testing


on:
  pull_request:
    branches:
      - master


jobs:
  sqlite:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - 3.9
          - 3.8
          - 3.7
          - 3.6
        django-version:
          - 3.2.3
          - 3.1.11
          - 2.2.23

    env:
      DATABASE_ENGINE: sqlite
      DJANGO_VERSION: ${{ matrix.django-version }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Environment Report
        run: |
          echo Python Version ... $(python --version)
          echo Django Version ... ${DJANGO_VERSION}
          echo Database Used .... ${DATABASE_ENGINE}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install Django==${{ matrix.django-version }}
          pip install -r requirements.txt

      - name: Unit Testing
        run: make test-unit

      - name: Coverage Report
        run: make test-coverage-report

      - name: Local Integration Testing
        run: make test-integration

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v1


  postgres:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - 3.9
          - 3.8
          - 3.7
          - 3.6
        django-version:
          - 3.2.3
          - 3.1.11
          - 2.2.23

    env:
      DATABASE_ENGINE: postgres
      DJANGO_VERSION: ${{ matrix.django-version }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: gh_actions_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Environment Report
        run: |
          echo Python Version ... $(python --version)
          echo Django Version ... ${DJANGO_VERSION}
          echo Database Used .... ${DATABASE_ENGINE}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install Django==${{ matrix.django-version }}
          pip install -r requirements.txt
          pip install psycopg2

      - name: Unit Testing
        run: make test-unit

      - name: Coverage Report
        run: make test-coverage-report

      - name: Local Integration Testing
        run: make test-integration

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v1


  mysql:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - 3.9
          - 3.8
          - 3.7
          - 3.6
        django-version:
          - 3.2.3
          - 3.1.11
          - 2.2.23

    env:
      DATABASE_ENGINE: mysql
      DJANGO_VERSION: ${{ matrix.django-version }}

    services:
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: gh_actions_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Environment Report
        run: |
          echo Python Version ... $(python --version)
          echo Django Version ... ${DJANGO_VERSION}
          echo Database Used .... ${DATABASE_ENGINE}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install Django==${{ matrix.django-version }}
          pip install -r requirements.txt
          pip install mysqlclient

      - name: Unit Testing
        run: make test-unit

      - name: Coverage Report
        run: make test-coverage-report

      - name: Local Integration Testing
        run: make test-integration

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v1
