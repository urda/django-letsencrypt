os: linux

dist: xenial

language: python

services:
  - mysql
  - postgresql

python:
  - 3.8
  - 3.7
  - 3.6

env:
  - DJANGO_VERSION=3.1.2 DATABASE_ENGINE=sqlite
  - DJANGO_VERSION=3.1.2 DATABASE_ENGINE=postgres
  - DJANGO_VERSION=3.1.2 DATABASE_ENGINE=mysql
  - DJANGO_VERSION=3.0.10 DATABASE_ENGINE=sqlite
  - DJANGO_VERSION=3.0.10 DATABASE_ENGINE=postgres
  - DJANGO_VERSION=3.0.10 DATABASE_ENGINE=mysql
  - DJANGO_VERSION=2.2.16 DATABASE_ENGINE=sqlite
  - DJANGO_VERSION=2.2.16 DATABASE_ENGINE=postgres
  - DJANGO_VERSION=2.2.16 DATABASE_ENGINE=mysql

branches:
  only:
    - master
    - develop
    - /^release\/.*$/
    - /^support\/.*$/

before_install:
  - echo Travis OS Name ... ${TRAVIS_OS_NAME}
  - echo Travis Python .... ${TRAVIS_PYTHON_VERSION}
  - echo Python Version ... $(python --version)
  - echo Django Version ... ${DJANGO_VERSION}
  - echo Database Used .... ${DATABASE_ENGINE}

install:
  - pip install --upgrade pip
  - pip install Django==${DJANGO_VERSION}
  - pip install -r requirements.txt

before_script:
  - sh -c "
    if [ '${DATABASE_ENGINE}' = 'mysql' ];
    then
      pip install mysqlclient;
      mysql -e 'CREATE DATABASE travis_ci_test;';
    fi"
  - sh -c "
    if [ '${DATABASE_ENGINE}' = 'postgres' ];
    then
      pip install psycopg2;
      psql -c 'create database travis_ci_test;' -U postgres;
    fi"

stages:
  - "Linting Tests"
  - test
  - "Integration Tests"

script:
  - make test-unit
  - make test-coverage-report

jobs:
  include:
    - stage: "Linting Tests"
      name: "Version Check"
      script: make version-check
    - name: "Flake Check"
      script: make test-flake
    - stage: "Integration Tests"
      name: "Local Integration Tests"
      script: make test-integration

after_success:
  - bash <(curl -s https://codecov.io/bash)

notifications:
  email: false
