language: python

dist: xenial

sudo: required

services:
  - mysql
  - postgresql

python:
  - "3.4"
  - "3.5"
  - "3.6"
  - "3.7"

env:
  - DJANGO_VERSION=1.11.17 DATABASE_ENGINE=mysql
  - DJANGO_VERSION=1.11.17 DATABASE_ENGINE=postgres
  - DJANGO_VERSION=1.11.17 DATABASE_ENGINE=sqlite
  - DJANGO_VERSION=2.0.9 DATABASE_ENGINE=mysql
  - DJANGO_VERSION=2.0.9 DATABASE_ENGINE=postgres
  - DJANGO_VERSION=2.0.9 DATABASE_ENGINE=sqlite
  - DJANGO_VERSION=2.1.4 DATABASE_ENGINE=mysql
  - DJANGO_VERSION=2.1.4 DATABASE_ENGINE=postgres
  - DJANGO_VERSION=2.1.4 DATABASE_ENGINE=sqlite

matrix:
  exclude:
  - python: "3.4"
    env: DJANGO_VERSION=2.1.4 DATABASE_ENGINE=mysql
  - python: "3.4"
    env: DJANGO_VERSION=2.1.4 DATABASE_ENGINE=postgres
  - python: "3.4"
    env: DJANGO_VERSION=2.1.4 DATABASE_ENGINE=sqlite
  - python: "3.7"
    env: DJANGO_VERSION=1.11.17 DATABASE_ENGINE=mysql
  - python: "3.7"
    env: DJANGO_VERSION=1.11.17 DATABASE_ENGINE=postgres
  - python: "3.7"
    env: DJANGO_VERSION=1.11.17 DATABASE_ENGINE=sqlite

branches:
  only:
    - master
    - develop
    - /^release\/.*$/
    - /^support\/.*$/

before_install:
  - echo Travis OS Name ... ${TRAVIS_OS_NAME}
  - echo Travis Python .... ${TRAVIS_PYTHON_VERSION}
  - echo Python Version ... $(python --version)
  - echo Django Version ... ${DJANGO_VERSION}
  - echo Database Used .... ${DATABASE_ENGINE}

install:
  - pip install --upgrade pip
  - pip install Django==${DJANGO_VERSION}
  - pip install -r requirements.txt

before_script:
  - sh -c "
    if [ '${DATABASE_ENGINE}' = 'mysql' ];
    then
      pip install mysqlclient;
      mysql -e 'CREATE DATABASE travis_ci_test;';
    fi"
  - sh -c "
    if [ '${DATABASE_ENGINE}' = 'postgres' ];
    then
      pip install psycopg2;
      psql -c 'create database travis_ci_test;' -U postgres;
    fi"

script:
  - make version-check
  - make test-flake
  - make test-unit
  - make test-coverage-report

after_success:
  - bash <(curl -s https://codecov.io/bash)

notifications:
  email: false
  slack:
    secure: >
      IK9eYxJVo807pl9Nx7RLZ/Pic4kNOHWJ8yHF/FUd2hl4lr2DudAofsUZMwSZOPT8xVrTJvYhv6
      7h88NwfvfEFkKhji6QZ6g5sl2HiyyzE8TYA/RvW8LsBWNwO02czODEKwtNwcGqncsftuCdcuMv
      CMiwKW55UdvFSfefejTgLC5xQHdvhoku4zUKBQ1Wglv2E0YIzzCwtzLeScdmTsKjieGSX61X/b
      p/4rosHYXQtLNP5TmUtccFmX0Sm6+SpIThVZznk3wOjWvpjX0yx5EDI9hQLTZHpMeK0JEhjbHj
      6b5D+srtNlmzRUsiXAcnkzGMzdpXlGUcvPTF1iKM2RfIUAoNTkto2Ae4B3Dwwva93G+SpGqo5y
      HZIZ7umo00zHyoNVvyQDJt7Ti1hNfXG5Oa5ROJ0Ns3704hH3XGqVG2EElQ7ny92Bp7uOyapiUA
      jr0hIBL338wOhD8qNCgmKgljxfJ5o3ufqJvFl8ta1hG/+pBe12H/amV+BUua1tmbWnKzPjeaGU
      /xeGjyHftigNQlTmiaf//yqBJeb5fYnyEmHiVQnSSOLjegvKd2Kp4Ys81cT9OkxonIpDDMKoOt
      fwUDiNfrfZKz0MLyuglWeX/azKNTDdyzZhPvuPp5kK6KXxXVXVwKZshud8Md1gUHEft1xYuuyJ
      KwBcCI8JZJkkdUfX8=
